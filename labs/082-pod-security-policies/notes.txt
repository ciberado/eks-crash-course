kops edit cluster --name ...


spec:
  kubeAPIServer:
    admissionControl:
    - NamespaceLifecycle
    - LimitRanger
    - ServiceAccount
    - PersistentVolumeLabel
    - DefaultStorageClass
    - ResourceQuota
    - PodSecurityPolicy
    - DefaultTolerationSeconds

kops update cluster --name ... --yes
kops validate cluster

kubectl get psp --all-namespaces
kubectl auth can-i use psp/privileged

kubectl apply -f https://raw.githubusercontent.com/kubernetes/website/master/content/en/examples/controllers/nginx-deployment.yaml

kubectl get pods (0 pods)

kubectl get deployments (0 de 3)


kubectl describe deploy nginx-deployment

  status:
    conditions:
    - lastTransitionTime: 2019-04-03T14:53:28Z
      message: 'pods "nginx-deployment-67594d6bf6-" is forbidden: unable to validate
        against any pod security policy: []'
      reason: FailedCreate
      status: "True"
      type: ReplicaFailure
    observedGeneration: 1
    replicas: 0
	
kubectl describe pod/kube-proxy-ip-172-20-121-222.eu-west-1.compute.internal -n kube-system
	
Annotations:        kubernetes.io/config.hash=0517cbf050d495da95e6c1f9fe4b07a9
                    kubernetes.io/config.mirror=0517cbf050d495da95e6c1f9fe4b07a9
                    kubernetes.io/config.seen=2019-04-03T14:39:28.955951456Z
                    kubernetes.io/config.source=file
                    kubernetes.io/psp=kube-system <-------------------
                    scheduler.alpha.kubernetes.io/critical-pod=
Status:             Running

	
```
cat << EOF | kubectl apply -f -
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: restrictive
spec:
  privileged: false
  hostNetwork: false
  allowPrivilegeEscalation: false
  defaultAllowPrivilegeEscalation: false
  hostPID: false
  hostIPC: false
  runAsUser:
    rule: RunAsAny
  fsGroup:
    rule: RunAsAny
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    rule: RunAsAny
  volumes:
  - 'configMap'
  - 'downwardAPI'
  - 'emptyDir'
  - 'persistentVolumeClaim'
  - 'secret'
  - 'projected'
  allowedCapabilities:
  - '*'
EOF
```

```
cat << EOF | kubectl apply -f -
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: permissive
spec:
  privileged: true
  hostNetwork: true
  hostIPC: true
  hostPID: true
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    rule: RunAsAny
  runAsUser:
    rule: RunAsAny
  fsGroup:
    rule: RunAsAny
  hostPorts:
  - min: 0
    max: 65535
  volumes:
  - '*'
EOF
```

```
cat << EOF | kubectl apply -f -
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: use-restrictive-psp-role
rules:
- apiGroups:
  - extensions
  resources:
  - podsecuritypolicies
  resourceNames:
  - restrictive
  verbs:
  - use
EOF
```


kubectl auth can-i use psp/psp-permissive

```
cat << EOF | kubectl apply -f -
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: psp-permissive
rules:
- apiGroups:
  - extensions
  resources:
  - podsecuritypolicies
  resourceNames:
  - permissive
  verbs:
  - use
EOF
```

```
cat << EOF | kubectl apply -f -
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: psp-default
subjects:
- kind: Group
  name: system:serviceaccounts
  namespace: kube-system
roleRef:
  kind: ClusterRole
  name: psp-restrictive
  apiGroup: rbac.authorization.k8s.io
EOF
```

```
cat << EOF | kubectl apply -f -
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  namespace: raccoon
  labels:
    app: nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx:1.15.4
EOF
```

kubectl get po,rs,deploy (no han relanzado los pods)


kubectl delete deploy nginx-deployment
kubectl apply -f https://raw.githubusercontent.com/kubernetes/website/master/content/en/examples/controllers/nginx-deployment.yaml
kubectl get po,rs,deploy (ahora funciona sin problema)
kubectl describe pods nginx-deployment-67594d6bf6-br9dv
  Annotations:        kubernetes.io/psp=restrictive
  
  
```
cat << EOF | kubectl apply -f -
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-hostnetwork-deployment
  namespace: raccoon
  labels:
    app: nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx:1.15.4
      hostNetwork: true
EOF
```

kubectl get po,rs,deploy (fracaso absoluto)

https://octetz.com/posts/setting-up-psps
https://medium.com/coryodaniel/kubernetes-assigning-pod-security-policies-with-rbac-2ad2e847c754
https://github.com/docker/labs/tree/master/security/capabilities
https://unofficial-kubernetes.readthedocs.io/en/latest/concepts/policy/pod-security-policy/
https://www.youtube.com/watch?v=ltrV-Qmh3oY
https://www.youtube.com/watch?v=ohTq0no0ZVU&index=158&list=PLj6h78yzYM2P-3-xqvmWaZbbI1sW-ulZb
https://www.youtube.com/watch?v=dxKpCO2dAy8
https://github.com/moby/moby/blob/52f32818df8bad647e4c331878fa44317e724939/docs/security/seccomp.md#syscalls-blocked-by-the-default-profile
https://learnk8s.io/blog/kubectl-productivity/